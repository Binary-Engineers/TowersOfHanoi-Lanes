	AREA MYDATA, DATA, READWRITE
		
LANES			DCB	0x01, 0x02, 0x06, 0x02, 0x01, 0x20, 0x24, 0x20, 0x01, 0x10, 0x18, 0x10, 0x01, 0x02, 0x06, 0x02, 0x10, 0x01, 0x02, 0x06, 0x02
SAFE_LANE		DCB 0x00
DIFFICULTY 		DCB 0x00
		
RCC_BASE        EQU 0x40023800
RCC_AHB1ENR     EQU RCC_BASE + 0x30

GPIOA_BASE          EQU     0x40020000   ; Port A Base Address for STM32F401RCT6
GPIOA_MODER         EQU     GPIOA_BASE   ; GPIOA Mode Register
GPIOA_ODR           EQU     GPIOA_BASE + 0x14
GPIOA_OSPEEDR   	EQU 	GPIOA_MODER + 0x08

GPIOB_BASE          EQU     0x40020400   ; Port B Base Address for STM32F401RCT6
GPIOB_MODER         EQU     GPIOB_BASE   ; GPIOB Mode Register
GPIOB_IDR           EQU     GPIOB_BASE + 0x10
GPIOB_OSPEEDR   	EQU 	GPIOB_MODER + 0x08
GPIOB_PUPDR   	EQU 	GPIOB_MODER + 0x0C
GPIOB_OTYPER   	EQU 	GPIOB_MODER + 0x04
	

INTERVAL        EQU 0x186004
OUTPUT			EQU		0x41555555
RST		EQU     0x0100
NRST	EQU		0xFEFF
CS      EQU     0x0200
NCS		EQU		0xFDFF
RS      EQU     0x0400
NRS		EQU		0xFBFF
WR      EQU     0x0800
NWR		EQU		0xF7FF
RD      EQU     0x1000
NRD		EQU		0xEFFF
LOWER_HALF		EQU		0x0000FFFF
LOWER_THREE_QUARTERS	EQU 0x0FFF
SCREEN_SIZE		EQU		0x3751
	
;TOWER OF HANOI CONSTANS
TOWER_1	EQU		0x003C
TOWER_2	EQU		0x00A0
TOWER_3	EQU		0x0104

RING_7	EQU		0x1E ;ASSENDING OREDER FROM SMALL TO BIG
RING_6	EQU		0x28
RING_5	EQU		0x32
RING_4	EQU		0x3C
RING_3	EQU		0x46
RING_2	EQU		0x50
RING_1	EQU		0x5A

COLOR_RING_7 EQU 0xe800; RED
COLOR_RING_6 EQU 0xece0	; ORANGE
COLOR_RING_5 EQU 0xFFE0; YELLOW
COLOR_RING_4 EQU 0x0774 ; A5DR FATE7  	
COLOR_RING_3 EQU 0x2600 ; GREEN
COLOR_RING_2 EQU 0x05df ; BLUE
COLOR_RING_1 EQU 0x7056 ; PURPLE
	
LEVEL_1	EQU		0x00F0 ;ASSENDING OREDER FROM DOWN TO UP SCREEN
LEVEL_2	EQU		0x00DC
LEVEL_3	EQU		0x00C8
LEVEL_4	EQU		0x00B4
LEVEL_5	EQU		0x00A0
LEVEL_6	EQU		0x008C
LEVEL_7	EQU		0x0078


;TOWER OF HANOI VARIABLES
NUM_RING_TOWER1	DCB		0X07		
NUM_RING_TOWER2	DCB		0X00
NUM_RING_TOWER3	DCB		0X00
	
LIFES	DCB		0X03

TOWER1_ARRAY	DCB	0x00, 0x00, 0x00, 0x00, 0x00 ;DESCENDING OREDER WHER INDEX_0 = BIGGEST RING
TOWER2_ARRAY	DCB 0X00, 0X00, 0X00, 0X00, 0X00
TOWER3_ARRAY	DCB	0X00, 0X00, 0X00, 0X00, 0X00

	AREA MYCODE, CODE, READONLY
	EXPORT __main
		
CURRENT_NUMBER_OF_BLACK_PIXELS	DCW 0x0000
		
Heart_1		DCW  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
Heart_2		DCW  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
Heart_3		DCW  0x0000, 0x0000, 0x0000, 0x0000, 0xe267, 0xe267, 0xe267, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe267, 0xe267, 0xe267, 0x0000, 0x0000, 0x0000, 0x0000 
Heart_4		DCW  0x0000, 0x0000, 0x0000, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0x0000, 0x0000, 0x0000, 0x0000, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0x0000, 0x0000, 0x0000 
Heart_5		DCW  0x0000, 0x0000, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0x0000, 0x0000, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0x0000, 0x0000 
Heart_6		DCW  0x0000, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0x0000 
Heart_7		DCW  0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267 
Heart_8		DCW  0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267 
Heart_9		DCW  0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267 
Heart_10	DCW  0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267 
Heart_11	DCW  0x0000, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0x0000 
Heart_12	DCW  0x0000, 0x0000, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0x0000, 0x0000 
Heart_13	DCW  0x0000, 0x0000, 0x0000, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0x0000, 0x0000, 0x0000 
Heart_14	DCW  0x0000, 0x0000, 0x0000, 0x0000, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0x0000, 0x0000, 0x0000, 0x0000 
Heart_15	DCW  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
Heart_16	DCW  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
Heart_17	DCW  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0xe267, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
Heart_18	DCW  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe267, 0xe267, 0xe267, 0xe267, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
Heart_19	DCW  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe267, 0xe267, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
Heart_20	DCW  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000


		
WIN_1	DCW	 0xA870
WIN_19	DCW  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xA015
WIN_20	DCW  0xA0F0
WIN_22	DCW  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xA015
WIN_23	DCW	 0xA708
WIN_38	DCW  0xA00B, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA007, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0x0000, 0xA008, 0xfe01, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xfe01, 0xA00C 
WIN_39	DCW  0xA00B, 0xfe01, 0xfe01, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA007, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0x0000, 0xA008, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xA00C
WIN_40	DCW  0xA00B, 0xfe01, 0xfe01, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA007, 0xfe01, 0xA00B, 0xfe01, 0xfe01, 0xfe01, 0xA00C, 0xfe01, 0x0000, 0xA008, 0xfe01, 0xfe01, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0xfe01, 0xfe01, 0xA00C 
WIN_41	DCW  0xA00B, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA007, 0xfe01, 0xA00B, 0xfe01, 0xfe01, 0xfe01, 0xA00C, 0xfe01, 0x0000, 0xA008, 0xfe01, 0xfe01, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA00C
WIN_42	DCW  0xA00B, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA007, 0x0000, 0xA00B, 0xfe01, 0xfe01, 0xfe01, 0xA00C, 0x0000, 0x0000, 0xA008, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA00C 
WIN_43	DCW  0xA00B, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA007, 0x0000, 0xA00B, 0xfe01, 0xfe01, 0xfe01, 0xA00C, 0x0000, 0x0000, 0xA008, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA00C 
WIN_44	DCW  0xA00B, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA007, 0x0000, 0xA00B, 0xfe01, 0xfe01, 0xfe01, 0xA00C, 0x0000, 0x0000, 0xA008, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA00C
WIN_45	DCW  0xA00B, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA007, 0x0000, 0xA00B, 0xfe01, 0xfe01, 0xfe01, 0xA00C, 0x0000, 0x0000, 0xA008, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA00C
WIN_46	DCW  0xA00B, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA007, 0x0000, 0xA00B, 0xfe01, 0xfe01, 0xfe01, 0xA00C, 0x0000, 0x0000, 0xA008, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA00C 
WIN_47	DCW  0xA00B, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA007, 0x0000, 0xA00B, 0xfe01, 0xfe01, 0xfe01, 0xA00C, 0x0000, 0x0000, 0xA008, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA00C 
WIN_48	DCW  0xA00B, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA007, 0x0000, 0xA00B, 0xfe01, 0xfe01, 0xfe01, 0xA00C, 0x0000, 0x0000, 0xA008, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA00C 
WIN_49	DCW  0xA00B, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA007, 0x0000, 0xA00B, 0xfe01, 0xfe01, 0xfe01, 0xA00C, 0x0000, 0x0000, 0xA008, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA00C 
WIN_50	DCW  0xA00B, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA007, 0x0000, 0xA00B, 0xfe01, 0xfe01, 0xfe01, 0xA00C, 0x0000, 0x0000, 0xA008, 0xfe01, 0xfe01, 0xA015, 0xfe01, 0xfe01, 0xA00C
WIN_51	DCW  0xA00B, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA007, 0x0000, 0xA00B, 0xfe01, 0xfe01, 0xfe01, 0xA00C, 0x0000, 0x0000, 0xA008, 0xfe01, 0xfe01, 0xA015, 0xfe01, 0xfe01, 0xA00C 
WIN_52	DCW  0xA00B, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA007, 0x0000, 0xA00B, 0xfe01, 0xfe01, 0xfe01, 0xA00C, 0x0000, 0x0000, 0xA008, 0xfe01, 0xfe01, 0xA015, 0xfe01, 0xfe01, 0xA00C 
WIN_53	DCW  0xA00B, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA007, 0x0000, 0xA00B, 0xfe01, 0xfe01, 0xfe01, 0xA00C, 0x0000, 0x0000, 0xA008, 0xfe01, 0xfe01, 0xA015, 0xfe01, 0xfe01, 0xA00C 
WIN_54	DCW  0xA00B, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA007, 0x0000, 0xA00B, 0xfe01, 0xfe01, 0xfe01, 0xA00C, 0x0000, 0x0000, 0xA008, 0xfe01, 0xfe01, 0xA015, 0xfe01, 0xfe01, 0xA00C
WIN_55	DCW  0xA00B, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA007, 0x0000, 0xA00B, 0xfe01, 0xfe01, 0xfe01, 0xA00C, 0x0000, 0x0000, 0xA008, 0xfe01, 0xfe01, 0xA015, 0xfe01, 0xfe01, 0xA00C
WIN_56	DCW  0xA00B, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA007, 0x0000, 0xA00B, 0xfe01, 0xfe01, 0xfe01, 0xA00C, 0x0000, 0x0000, 0xA008, 0xfe01, 0xfe01, 0xA015, 0xfe01, 0xfe01, 0xA00C
WIN_57	DCW  0xA00B, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA007, 0x0000, 0xA00B, 0xfe01, 0xfe01, 0xfe01, 0xA00C, 0x0000, 0x0000, 0xA008, 0xfe01, 0xfe01, 0xA015, 0xfe01, 0xfe01, 0xA00C
WIN_58	DCW  0xA00B, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xA007, 0x0000, 0xA00B, 0xfe01, 0xfe01, 0xfe01, 0xA00C, 0x0000, 0x0000, 0xA008, 0xfe01, 0xfe01, 0xA015, 0xfe01, 0xfe01, 0xA00C
WIN_59	DCW  0xA00B, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0x0000, 0xfe01, 0xfe01, 0xA007, 0xfe01, 0xA00B, 0xfe01, 0xfe01, 0xfe01, 0xA00C, 0xfe01, 0x0000, 0xA008, 0xfe01, 0xfe01, 0xA015, 0xfe01, 0xfe01, 0xA00C
WIN_60	DCW  0xA00B, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0x0000, 0xfe01, 0xfe01, 0xA007, 0xfe01, 0xA00B, 0xfe01, 0xfe01, 0xfe01, 0xA00C, 0xfe01, 0x0000, 0xA008, 0xfe01, 0xfe01, 0xA015, 0xfe01, 0xfe01, 0xA00C 
WIN_61	DCW  0xA00B, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xfe01, 0xA007, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0x0000, 0xA008, 0xfe01, 0xfe01, 0xA015, 0xfe01, 0xfe01, 0xA00C 
WIN_62	DCW  0xA00B, 0xfe01, 0xfe01, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe01, 0xfe01, 0xfe01, 0xA007, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0xfe01, 0x0000, 0xA008, 0xfe01, 0xfe01, 0xA015, 0xfe01, 0xfe01, 0xA00C
WIN_64	DCW	 0xAE10
WIN_94	DCW  0xA012, 0x0000, 0x0000, 0x0000, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0x0000, 0x0000, 0x0000, 0xA05C	 
WIN_95	DCW  0xA012, 0x0000, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0x0000, 0xA05C
WIN_96	DCW  0xA012, 0x0000, 0xf6a0, 0xf6a0, 0x0000, 0x0000, 0x0000, 0x0000, 0xf6a0, 0xf6a0, 0x0000, 0xA05C
WIN_97	DCW  0xA012, 0xf6a0, 0xf6a0, 0x0000, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0x0000, 0xf6a0, 0xf6a0, 0xA05C
WIN_98	DCW  0xA012, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0xA05C
WIN_99	DCW  0xA012, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0xA05C
WIN_100	DCW  0xA012, 0xf6a0, 0xf6a0, 0xf6a0, 0x0000, 0xf6a0, 0xf6a0, 0x0000, 0xf6a0, 0xf6a0, 0xf6a0, 0xA05C
WIN_101	DCW  0xA012, 0x0000, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0x0000, 0xA05C
WIN_102	DCW  0xA012, 0x0000, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0x0000, 0xA05C
WIN_103	DCW  0xA012, 0x0000, 0x0000, 0x0000, 0xf6a0, 0xf6a0, 0xf6a0, 0xf6a0, 0x0000, 0x0000, 0x0000, 0xA05C
WIN_104	DCW	 0xA781

LOSE_1	 DCW	  0xA870
LOSE_19	 DCW	  0xA020, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xA00c
LOSE_20	 DCW	  0xA078
LOSE_21	 DCW	  0xA020, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xA00c
LOSE_22	 DCW	  0xA3C0
LOSE_30	 DCW	  0xA02D, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xA004, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0x0000, 0x0000, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xA00E 
LOSE_31	 DCW	  0xA02D, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA004, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xA00E 
LOSE_32	 DCW	  0xA02D, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA004, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA013, 0xe8e4, 0xe8e4, 0xA00E
LOSE_33	 DCW	  0xA02D, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA004, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA013, 0xe8e4, 0xe8e4, 0xA00E 
LOSE_34	 DCW	  0xA02D, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA004, 0x0000, 0x0000, 0xe8e4, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA013, 0xe8e4, 0xe8e4, 0xA00E 
LOSE_35	 DCW	  0xA02D, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA004, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA013, 0xe8e4, 0xe8e4, 0xA00E 
LOSE_36	 DCW	  0xA02D, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA004, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA013, 0xe8e4, 0xe8e4, 0xA00E 
LOSE_37	 DCW	  0xA02D, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xA004, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA013, 0xe8e4, 0xe8e4, 0xA00E 
LOSE_38	 DCW	  0xA02D, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA004, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA013, 0xe8e4, 0xe8e4, 0xA00E 
LOSE_39	 DCW	  0xA02D, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA004, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA013, 0xe8e4, 0xe8e4, 0xA00E
LOSE_40	 DCW	  0xA02D, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA004, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA013, 0xe8e4, 0xe8e4, 0xA00E
LOSE_41	 DCW	  0xA02D, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA004, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA013, 0xe8e4, 0xe8e4, 0xA00E 
LOSE_42	 DCW	  0xA02D, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA004, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA013, 0xe8e4, 0xe8e4, 0xA00E 
LOSE_43	 DCW	  0xA02D, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA004, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xe8e4, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA013, 0xe8e4, 0xe8e4, 0xA00E
LOSE_44	 DCW	  0xA02D, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA004, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA013, 0xe8e4, 0xe8e4, 0xA00E 
LOSE_45	 DCW	  0xA02D, 0xb0a3, 0xb0a3, 0xb0a3, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xA004, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA013, 0xe8e4, 0xe8e4, 0xA00E
LOSE_46	 DCW	  0xA02D, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xA004, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xe8e4, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA013, 0xe8e4, 0xe8e4, 0xA00E 
LOSE_47	 DCW	  0xA02D, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xA004, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA013, 0xe8e4, 0xe8e4, 0xA00E
LOSE_48	 DCW	  0xA02D, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xA004, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xA013, 0xe8e4, 0xe8e4, 0xA00E
LOSE_49	 DCW	  0xA068, 0xe8e4, 0xe8e4, 0xA00E
LOSE_50	 DCW	  0xA068, 0xe8e4, 0xe8e4, 0xA00E
LOSE_51	 DCW	  0xA068, 0xe8e4, 0xe8e4, 0xA00E
LOSE_52	 DCW	  0xA068, 0xe8e4, 0xe8e4, 0xA00E
LOSE_53	 DCW	  0xA068, 0xe8e4, 0xe8e4, 0xA00E
LOSE_54	 DCW	  0xA068, 0xe8e4, 0xe8e4, 0xA00E
LOSE_55	 DCW	  0xA068, 0xe8e4, 0xe8e4, 0xA00E
LOSE_56	 DCW	  0xA068, 0xe8e4, 0xe8e4, 0xA00E
LOSE_57	 DCW	  0xA068, 0xe8e4, 0xe8e4, 0xA00E
LOSE_58	 DCW	  0xA068, 0xe8e4, 0xe8e4, 0xA00E
LOSE_59	 DCW	  0xA068, 0xe8e4, 0xe8e4, 0xA00E
LOSE_60	 DCW	  0xA068, 0xe8e4, 0xe8e4, 0xA00E
LOSE_61	 DCW	  0xA068, 0xe8e4, 0xe8e4, 0xA00E
LOSE_62	 DCW	  0xA068, 0xe8e4, 0xe8e4, 0xA00E
LOSE_63	 DCW	  0xA068, 0xe8e4, 0xe8e4, 0xA00E
LOSE_64	 DCW	  0xA068, 0xe8e4, 0xe8e4, 0xA00E
LOSE_65	 DCW	  0xA068, 0xe8e4, 0xe8e4, 0xA00E
LOSE_66	 DCW	  0xA068, 0xe8e4, 0xe8e4, 0xA00E
LOSE_67	 DCW	  0xA068, 0xe8e4, 0xe8e4, 0xA00E
LOSE_68	 DCW	  0xA870
LOSE_86	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x9cf3, 0x9cf3, 0x9cf3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
LOSE_87	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x9cf3, 0x9cf3, 0x9cf3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9cf3, 0x9cf3, 0x9cf3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
LOSE_88	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x9cf3, 0x9cf3, 0x9cf3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9cf3, 0x9cf3, 0x9cf3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
LOSE_89	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x9cf3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9cf3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
LOSE_90	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
LOSE_91	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x9cf3, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0x9cf3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
LOSE_92	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x9cf3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9cf3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
LOSE_93	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x9cf3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9cf3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
LOSE_94	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x9cf3, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x9cf3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
LOSE_95	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x9cf3, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x9cf3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
LOSE_96	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x9cf3, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x9cf3, 0xffff, 0xffff, 0xffff, 0x9cf3, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x9cf3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
LOSE_97	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
LOSE_98	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
LOSE_99	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
LOSE_100 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
LOSE_101 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x9cf3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9cf3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
LOSE_102 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x9cf3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9cf3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
LOSE_103 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x9cf3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9cf3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
LOSE_104 DCW	  0xA709

MENU_1	 DCW	  0xA690
MENU_15	 DCW	  0xA032, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xA009, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0xA019 
MENU_16	 DCW	  0xA032, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xA009, 0x0000, 0xffff, 0xffd7, 0xffff, 0x0000, 0xA019 
MENU_17	 DCW	  0xA032, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA009, 0xffff, 0xffd7, 0xffd7, 0xffd7, 0xffff, 0xA019 
MENU_18	 DCW	  0xA032, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0xe8e4, 0xe8e4, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA009, 0xffff, 0xffd7, 0xffd7, 0xffd7, 0xffff, 0xA019 
MENU_19	 DCW	  0xA032, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0xe8e4, 0xe8e4, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA009, 0xffff, 0xffd7, 0xffd7, 0xffd7, 0xffff, 0xA019 
MENU_20	 DCW	  0xA032, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xe8e4, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA009, 0xffff, 0xffd7, 0xffd7, 0xffd7, 0xffff, 0xA019 
MENU_21	 DCW	  0xA032, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA009, 0xffff, 0xffd7, 0xffd7, 0xffd7, 0xffff, 0xA019 
MENU_22	 DCW	  0xA032, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA009, 0xffff, 0xffd7, 0xffd7, 0xffd7, 0xffff, 0xA019 
MENU_23	 DCW	  0xA032, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xA009, 0xffff, 0xffd7, 0xffd7, 0xffd7, 0xffff, 0xA019 
MENU_24	 DCW	  0xA032, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xA009, 0x0000, 0xffff, 0xffd7, 0xffff, 0x0000, 0xA019 
MENU_25	 DCW	  0xA032, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA009, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0xA019 
MENU_26	 DCW	  0xA032, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA027
MENU_27	 DCW	  0xA032, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA027
MENU_28	 DCW	  0xA032, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA027
MENU_29	 DCW	  0xA032, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA027
MENU_30	 DCW	  0xA032, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0x0000, 0x0000, 0x0000, 0x0000, 0xe8e4, 0xA027
MENU_31	 DCW	  0xA2D0
MENU_37	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
MENU_38	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
MENU_39	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x0000, 0x0000, 0x0000, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x0000, 0x0000, 0x0000, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffd7, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
MENU_40	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x05bd, 0x05bd, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffd7, 0xffd7, 0xffd7, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
MENU_41	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffd7, 0xffd7, 0xffd7, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
MENU_42	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x05bd, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffd7, 0xffd7, 0xffd7, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
MENU_43	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffd7, 0xffd7, 0xffd7, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
MENU_44	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffd7, 0xffd7, 0xffd7, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
MENU_45	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffd7, 0xffd7, 0xffd7, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
MENU_46	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffd7, 0xffd7, 0xffd7, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
MENU_47	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffd7, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
MENU_48	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
MENU_49	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
MENU_50	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
MENU_51	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x05bd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
MENU_52	 DCW	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 
MENU_53	 DCW	  0xA168
MENU_56	DCW	  0xA020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0820, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,0xA022
MENU_57	DCW	  0xA020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,0xA022
MENU_58	DCW	  0xA020, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,0xA022
MENU_59	DCW	  0xA020, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff,0xA022
MENU_60	DCW	  0xA020, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff,0xA022
MENU_61	DCW	  0xA020, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0xA019
MENU_62	DCW	  0xA020, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffd7, 0xffff, 0x0000, 0xA019
MENU_63	DCW	  0xA020, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffd7, 0xffd7, 0xffd7, 0xffff, 0xA019
MENU_64	DCW	  0xA020, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffd7, 0xffd7, 0xffd7, 0xffff, 0xA019
MENU_65	DCW	  0xA020, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffd7, 0xffd7, 0xffd7, 0xffff, 0xA019
MENU_66	DCW	  0xA020, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffd7, 0xffd7, 0xffd7, 0xffff, 0xA019
MENU_67	DCW	  0xA020, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffd7, 0xffd7, 0xffd7, 0xffff, 0xA019
MENU_68	DCW	  0xA020, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffd7, 0xffd7, 0xffd7, 0xffff, 0xA019
MENU_69	DCW	  0xA020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffd7, 0xffd7, 0xffd7, 0xffff, 0xA019
MENU_70	DCW	  0xA020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffd7, 0xffff, 0x0000, 0xA019
MENU_71	DCW	  0xA020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0xA019
MENU_72	DCW	  0xA020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xA019
MENU_73	DCW	  0xA020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xA019
MENU_74	DCW	  0xA020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,0xA022
MENU_75	DCW	  0xA020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,0xA022
MENU_76	DCW	  0xA020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,0xA022
MENU_77	DCW	  0xA020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,0xA022
MENU_78	DCW	  0xA020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,0xA022
MENU_79	 DCW	  0xA438
MENU_88	 DCW	  0xA009, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0x0000, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xA058 
MENU_89	 DCW	  0xA009, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0x0000, 0xfe00, 0x0000, 0xfe00, 0xfe00, 0x0000, 0x0000, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0x0000, 0xfe00, 0xA058 
MENU_90	 DCW	  0xA009, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0x0000, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xA058 
MENU_91	 DCW	  0xA009, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0x0000, 0xfe00, 0xfe00, 0xfe00, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xA058 
MENU_92	 DCW	  0xA009, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0x0000, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0x0000, 0x0000, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xA058 
MENU_93	 DCW	  0xA009, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0x0000, 0xfe00, 0x0000, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0x0000, 0xfe00, 0xA058 
MENU_94	 DCW	  0xA009, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0x0000, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xA058 
MENU_95	 DCW	  0xA009, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xA058 
MENU_96	 DCW	  0xA009, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0x0000, 0x0000, 0x8410, 0x0000, 0x8410, 0x0000, 0x0000, 0x8410, 0x0000, 0x8410, 0x0000, 0x8410, 0x0000, 0x8410, 0x0000, 0x8410, 0x0000, 0x8410, 0xA058 
MENU_97	 DCW	  0xA009, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0x0000, 0x0000, 0x8410, 0x0000, 0x8410, 0x0000, 0x8410, 0x8410, 0x0000, 0x8410, 0x0000, 0x8410, 0x0000, 0x8410, 0x0000, 0x8410, 0x0000, 0x8410, 0x0000, 0xA058 
MENU_98  DCW	  0xA009, 0xfc60, 0xfc60, 0xfc60, 0x0000, 0x0000, 0x8410, 0x0000, 0x8410, 0x0000, 0x8410, 0x0000, 0x0000, 0x8410, 0x0000, 0x8410, 0x0000, 0x8410, 0x0000, 0x8410, 0x0000, 0x8410, 0x0000, 0x0000, 0xA058 
MENU_99  DCW	  0xA009, 0xfc60, 0xfc60, 0x0000, 0x0000, 0x8410, 0x0000, 0x8410, 0x0000, 0x8410, 0x0000, 0x8410, 0x8410, 0x0000, 0x8410, 0x0000, 0x8410, 0x0000, 0x8410, 0x0000, 0x8410, 0x0000, 0x0000, 0x0000, 0xA058 
MENU_100 DCW	  0xA009, 0xfc60, 0xfc60, 0x0000, 0x8410, 0x0000, 0x8410, 0x0000, 0x8410, 0x0000, 0x8410, 0x0000, 0x0000, 0x8410, 0x0000, 0x8410, 0x0000, 0x8410, 0x0000, 0x8410, 0x0000, 0x0000, 0x0000, 0x0000, 0xA058 
MENU_101 DCW	  0xA009, 0xfc60, 0xfc60, 0xfc60, 0x0000, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xA058 
MENU_102 DCW	  0xA009, 0xfc60, 0xfc60, 0xfc60, 0x0000, 0xfe00, 0xfe00, 0xfe00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe00, 0xfe00, 0xfe00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xA058 
MENU_103 DCW	  0xA009, 0xfc60, 0xfc60, 0xfc60, 0x0000, 0xfe00, 0xfe00, 0x0000, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x0000, 0xfe00, 0xfe00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xA058 
MENU_104 DCW	  0xA009, 0xfc60, 0xfc60, 0xfc60, 0x0000, 0xfe00, 0xfe00, 0x0000, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x0000, 0xfe00, 0xfe00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xA058 
MENU_105 DCW	  0xA009, 0xfc60, 0xfc60, 0xfc60, 0x0000, 0xfe00, 0xfe00, 0x0000, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x0000, 0xfe00, 0xfe00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xA058 
MENU_106 DCW	  0xA009, 0xfc60, 0xfc60, 0xfc60, 0x0000, 0xfe00, 0xfe00, 0x0000, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x0000, 0xfe00, 0xfe00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xA058 
MENU_107 DCW	  0xA009, 0xfc60, 0xfc60, 0xfc60, 0x0000, 0xfe00, 0xfe00, 0x0000, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x0000, 0xfe00, 0xfe00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xA058 
MENU_108 DCW	  0xA009, 0xfc60, 0xfc60, 0xfc60, 0x0000, 0xfe00, 0xfe00, 0x0000, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x05fa, 0x0000, 0xfe00, 0xfe00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xA058 
MENU_109 DCW	  0xA009, 0xfc60, 0xfc60, 0xfc60, 0x0000, 0xfe00, 0xfe00, 0xfe00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe00, 0xfe00, 0xfe00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xA058 
MENU_110 DCW	  0xA009, 0xfc60, 0xfc60, 0xfc60, 0x0000, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0xfe00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xA058 
MENU_111 DCW	  0xA009, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0x0000, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0x0000, 0x0000, 0x0000, 0xA058 
MENU_112 DCW	  0xA009, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0x0000, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0x0000, 0x0000, 0x0000, 0xA058 
MENU_113 DCW	  0xA009, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0x0000, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0x0000, 0x0000, 0x0000, 0xA058
MENU_114 DCW	  0xA009, 0x0000, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0xfc60, 0x0000, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0xff40, 0x0000, 0x0000, 0x0000, 0xA058 
MENU_115 DCW	  0xA1E1

__main FUNCTION

    ; Initialize Port A
    LDR     R1, =RCC_AHB1ENR         ; Load RCC AHB1 peripheral clock enable register address
    LDR     R2, [R1]                 ; Read RCC AHB1 peripheral clock enable register
    MOV     R3, #11            		 ; Bit position for GPIOC in RCC AHB1ENR
    ORR     R2, R2, R3               ; Set the corresponding bit in RCC AHB1ENR to enable GPIOC clock
    STR     R2, [R1]                 ; Write back to RCC AHB1 peripheral clock enable register

    ; Configure GPIOA pin as output
    LDR     R1, =GPIOA_MODER         ; Load GPIOA port mode register address for GPIOA
    LDR     R2, [R1]                 ; Load current value of GPIOA_MODER
	LDR		R3, =OUTPUT
    ORR     R2, R2, R3             	 ; Set pin 13 mode to output (LED pin)
    STR     R2, [R1]                 ; Write to GPIOA_MODER to configure pin 13 as output
	
	; Configure GPIOB pin as INPUT
    LDR     R1, =GPIOB_MODER         ; Load GPIO port mode register address for GPIOB
    LDR     R2, [R1]                 ; Load current value of GPIOB_MODER
	MOV 	R2, #0
    STR     R2, [R1]                 ; Write to GPIOB_MODER to configure pin 13 as output

    ;DEFINE PORT A SPEED
    LDR R0,=GPIOA_OSPEEDR
	MOV R1, #0xFFFFFFFF ;DEFINE PORT A AS HIGH SPEED
	STR R1, [R0]
	
	;DEFINE PORT B SPEED
    LDR R0,=GPIOB_OSPEEDR
	MOV R1, #0xFFFFFFFF ;DEFINE PORT A AS HIGH SPEED
	STR R1, [R0]
	
	;DEFINE PORT B PUPDR
    LDR R0,=GPIOB_PUPDR
	MOV R1, #0x55555555 ;DEFINE PORT A AS HIGH SPEED
	STR R1, [R0]

    ;INITIALIZE LCD
	BL LCD_INIT
	
	LDR R9, =GPIOB_IDR   ; Load address of GPIOB_IDR into R0
	;BL TOWERS_OF_HANOI
	
	BL DRAW_MENU
	
SWITCHING_LANES

	;INITALIZE LANES
	LDR R0, =LANES           ; Load address of LANES into R0

    MOV R1, #0x12            ; Load immediate value into R1
    STRB R1, [R0], #1        ; Store byte in R1 into LANES and increment the pointer
    MOV R1, #0x02            ; Load immediate value into R1
    STRB R1, [R0], #1        ; Store byte in R1 into LANES and increment the pointer
    MOV R1, #0x06            ; Load immediate value into R1
    STRB R1, [R0], #1        ; Store byte in R1 into LANES and increment the pointer
    MOV R1, #0x02            ; Load immediate value into R1
    STRB R1, [R0], #1        ; Store byte in R1 into LANES and increment the pointer
    MOV R1, #0x12            ; Load immediate value into R1
    STRB R1, [R0], #1        ; Store byte in R1 into LANES and increment the pointer
    MOV R1, #0x10            ; Load immediate value into R1
    STRB R1, [R0], #1        ; Store byte in R1 into LANES and increment the pointer
    MOV R1, #0x18            ; Load immediate value into R1
    STRB R1, [R0], #1        ; Store byte in R1 into LANES and increment the pointer
    MOV R1, #0x10            ; Load immediate value into R1
    STRB R1, [R0], #1        ; Store byte in R1 into LANES and increment the pointer
    MOV R1, #0x12            ; Load immediate value into R1
    STRB R1, [R0], #1        ; Store byte in R1 into LANES and increment the pointer
    MOV R1, #0x10            ; Load immediate value into R1
    STRB R1, [R0], #1        ; Store byte in R1 into LANES and increment the pointer
    MOV R1, #0x18            ; Load immediate value into R1
    STRB R1, [R0], #1        ; Store byte in R1 into LANES and increment the pointer
    MOV R1, #0x10            ; Load immediate value into R1
    STRB R1, [R0], #1        ; Store byte in R1 into LANES and increment the pointer
    MOV R1, #0x12            ; Load immediate value into R1
    STRB R1, [R0], #1        ; Store byte in R1 into LANES and increment the pointer
    MOV R1, #0x02            ; Load immediate value into R1
    STRB R1, [R0], #1        ; Store byte in R1 into LANES and increment the pointer
    MOV R1, #0x06            ; Load immediate value into R1
    STRB R1, [R0], #1        ; Store byte in R1 into LANES and increment the pointer
    MOV R1, #0x02            ; Load immediate value into R1
    STRB R1, [R0], #1        ; Store byte in R1 into LANES and increment the pointer
    MOV R1, #0x12            ; Load immediate value into R1
    STRB R1, [R0], #1        ; Store byte in R1 into LANES and increment the pointer
	MOV R1, #0x02            ; Load immediate value into R1
    STRB R1, [R0], #1        ; Store byte in R1 into LANES and increment the pointer
	MOV R1, #0x06            ; Load immediate value into R1
    STRB R1, [R0], #1        ; Store byte in R1 into LANES and increment the pointer
	MOV R1, #0x02           ; Load immediate value into R1
    STRB R1, [R0], #1        ; Store byte in R1 into LANES and increment the pointer
	MOV R1, #0x12            ; Load immediate value into R1
    STRB R1, [R0], #1        ; Store byte in R1 into LANES and increment the pointer
	
	LDR	R0, =SAFE_LANE
	MOV R1, #1
	STRB R1, [R0]
	
	LDR R3, =LANES
	
	MOV R0, #160
	MOV R1, #240
	MOV R6, #0
	
	MOV R8, #2
	
	MOV R12, #3
	
	BL DRAW_LEFTBAR
	
	MOV R10, #0
	
	
GAME	

	BL SET_SAFE_LANE
	
	MOV R2,#0
	MOV R4, R0
	LDRB R5, [R3]

	BL DRAW_LANES
	BL CHECK_TO_DRAW
	
	MOV R2,R0
	MOV R4, R1
	MOV R7, R3
	ADD R7, #1
	LDRB R5, [R7] 
	
	BL DRAW_LANES
	BL CHECK_TO_DRAW
	BL DECREASE_LIVES
	
	MOV R2, R1
	MOV R4, #240
	ADD R7, #1
	LDRB R5, [R7]
	
	BL DRAW_LANES
	BL CHECK_TO_DRAW
	BL CHECK_TO_DRAW
		
	CMP R0, #0
	
	BEQ SHIFT_RO_R1
	
	SUB R0, R11
	SUB R1, R11
	
	
	BL GAME
	
SHIFT_RO_R1
	MOV R0, R1
	MOV R1, #240
	ADD R3, #1
		
	BL DRAW_LEFTBAR
	ADD R6, R6, #1
	CMP R6, #21
	BEQ WORKAROUND_GAME
	
	BL GAME
	
WORKAROUND_GAME	
	BL DRAW_LEFTBAR
	
	MOV R0, #70
	MOV R1, #189
	MOV R2, #60
	MOV R4, #179
	
	LDR R5, =WIN_1
	BL DRAW_SPRITE
	
WIN_LOOP
    LDR R10, [R9]        ; Read current value of GPIOB_IDR
	AND R10, R10, #0XF000
	
	CMP R10, #0x8000
	BNE	WORKAROUND_WIN
	BL DRAW_MENU
WORKAROUND_WIN
	BL WIN_LOOP
	
	BL END_PROGRAM


SET_SAFE_LANE
	PUSH{R0-R7,R9,LR}
	
	CMP R0, #21
	BGE SAFE_BELOW
	
	LDR R0, =SAFE_LANE
	MOV R7, R3
	ADD R7, #1
	LDRB R5, [R7]
	STRB R5, [R0]
	BL SET_SAFE_LANE_END
	
SAFE_BELOW
	LDR R0, =SAFE_LANE
	LDRB R5, [R3]
	STRB R5, [R0]
	
SET_SAFE_LANE_END
	
	POP{R0-R7,R9,PC}
	

CHECK_TO_DRAW
	PUSH{R0-R7,R9,LR}
		
	CMP R10, #0X1000
	BEQ PLAYER_AT_LANE_1
	
	CMP R10, #0X2000
	BEQ PLAYER_AT_LANE_2
	
	CMP R10, #0X4000
	BEQ PLAYER_AT_LANE_3
	
	CMP R10, #0X8000
	BEQ PLAY_PAUSE_THE_GAME
	
	BL START_DRAWING_PLAYER
	
	
PLAYER_AT_LANE_1
	MOV R8, #1
	BL START_DRAWING_PLAYER

PLAYER_AT_LANE_2
	MOV R8, #2
	BL START_DRAWING_PLAYER

PLAYER_AT_LANE_3
	MOV R8, #3
	BL START_DRAWING_PLAYER

PLAY_PAUSE_THE_GAME
	CMP R11,#0
	BEQ PLAY_THE_GAME
	MOV R11,#0
	BL DRAW_LEFTBAR
	BL START_DRAWING_PLAYER

PLAY_THE_GAME
	LDR R0,=DIFFICULTY
	LDRB R11,[R0]
	BL DRAW_LEFTBAR
	BL START_DRAWING_PLAYER
	
START_DRAWING_PLAYER
	BL DRAW_PLAYER
	
    POP{R0-R7,R9,PC}
	
DECREASE_LIVES
	PUSH{R0-R7,R9,LR}
	
	CMP R8, #1
	BEQ PLAYER_AT_1
	
	CMP R8, #2
	BEQ PLAYER_AT_2
	
	LDR R0, =SAFE_LANE
	LDRB R1,[R0]
	CMP R1, #0x10
	BEQ DECREASE_LIVES_END
	CMP R1, #0x18
	BEQ DECREASE_LIVES_END
	
	SUB R12, #1
	BL DRAW_LEFTBAR
	
	CMP R1, #0x02
	BEQ RESPAWN_AT_2
	CMP R1, #0x06
	BEQ RESPAWN_AT_1
	CMP R1, #0x12
	BEQ RESPAWN_AT_2
	
PLAYER_AT_1
	LDR R0, =SAFE_LANE
	LDRB R1,[R0]
	CMP R1, #0x02
	BEQ DECREASE_LIVES_END
	CMP R1, #0x06
	BEQ DECREASE_LIVES_END
	
	SUB R12, #1
	BL DRAW_LEFTBAR
	
	CMP R1, #0x10
	BEQ RESPAWN_AT_3
	CMP R1, #0x12
	BEQ RESPAWN_AT_2
	CMP R1, #0x18
	BEQ RESPAWN_AT_3
	
PLAYER_AT_2
	LDR R0, =SAFE_LANE
	LDRB R1,[R0]
	CMP R1, #0x02
	BEQ DECREASE_LIVES_END
	CMP R1, #0x010
	BEQ DECREASE_LIVES_END
	CMP R1, #0x012
	BEQ DECREASE_LIVES_END
	
	SUB R12, #1
	BL DRAW_LEFTBAR
	
	CMP R1, #0x06
	BEQ RESPAWN_AT_1
	CMP R1, #0x18
	BEQ RESPAWN_AT_3
	
RESPAWN_AT_1
	MOV R8, #1
	BL DECREASE_LIVES_END

RESPAWN_AT_2
	MOV R8, #2
	BL DECREASE_LIVES_END

RESPAWN_AT_3
	MOV R8, #3
	
DECREASE_LIVES_END

	POP{R0-R7,R9,PC}
	
	
LOST
	MOV R0, #0
	MOV R1, #320
	MOV R2, #0
	MOV R4, #240
	MOV R5, #0xFFFF
	BL DRAW_RECT_FILLED
	
	MOV R0, #70
	MOV R1, #189
	MOV R2, #60
	MOV R4, #179
	LDR R5, =LOSE_1
	BL DRAW_SPRITE
	
LOST_LOOP
    LDR R10, [R9]        ; Read current value of GPIOB_IDR
	AND R10, R10, #0XF000
	
	CMP R10, #0x8000
	BEQ DRAW_MENU
	BL LOST_LOOP
	
	
DRAW_MENU
	MOV R0, #70
	MOV R1, #189
	MOV R2, #60
	MOV R4, #179
	LDR R5, =MENU_1
	BL DRAW_SPRITE

LANES_MENU_LOOP
    LDR R10, [R9]        ; Read current value of GPIOB_IDR
	AND R10, R10, #0XF000
	
	CMP R10, #0x2000
	BEQ LANES_EASY
	
	CMP R10, #0x4000
	BEQ LANES_HARD
	
	CMP R10, #0x1000
	BEQ TOWERS_MENU_LOOP
	
	BL LANES_MENU_LOOP
	
LANES_EASY
	LDR R0,=DIFFICULTY
	MOV R1,# 20 ;TO BE CHANGED ACCOURDING TO THE LEVEL
	STRB R1,[R0]
	LDRB R11,[R0]
	BL	SWITCHING_LANES
	
LANES_HARD
	LDR R0,=DIFFICULTY
	MOV R1,# 40 ;TO BE CHANGED ACCOURDING TO THE LEVEL
	STRB R1,[R0]
	LDRB R11,[R0]
	BL SWITCHING_LANES
	
TOWERS_MENU_LOOP
    LDR R10, [R9]        ; Read current value of GPIOB_IDR
	AND R10, R10, #0XF000
	
	CMP R10, #0x2000
	BEQ TOWERS_EASY
	
	CMP R10, #0x4000
	BEQ TOWERS_HARD
	
	CMP R10, #0x1000
	BEQ LANES_MENU_LOOP

	BL TOWERS_MENU_LOOP

TOWERS_EASY
	LDR	R0, =LIFES
	MOV R1, #5
	STRB R1, [R0]
	BL	TOWERS_OF_HANOI
	
TOWERS_HARD
	LDR	R0, =LIFES
	MOV R1, #3
	STRB R1, [R0]
	BL TOWERS_OF_HANOI

DRAW_PLAYER
	;GETS PLAYER LANE FROM R8
	PUSH{R0-R7,R9,LR}
	
	CMP R8, #1
	BEQ LANE_1
	
	CMP R8, #2
	BEQ LANE_2

	MOV R0, #215
	MOV R1, #235
	MOV R2, #20
	MOV R4, #40
	MOV R5, #0x2CC8
	BL DRAW_RECT_FILLED
	BL END_DRAW
	
LANE_1

	MOV R0, #35
	MOV R1, #55
	MOV R2, #20
	MOV R4, #40
	MOV R5, #0x2CC8
	BL DRAW_RECT_FILLED
	BL END_DRAW
	
LANE_2
	
	MOV R0, #125
	MOV R1, #145
	MOV R2, #20
	MOV R4, #40
	MOV R5, #0x2CC8
	BL DRAW_RECT_FILLED
	
END_DRAW

	LTORG

    POP{R0-R7,R9,PC}
	
DRAW_LEFTBAR
	PUSH{R0-R7,R9,LR}
	;Draws the black rectangle
	MOV R0, #270
	MOV R1, #320
	MOV R2, #0
	MOV R4, #240
	MOV R5, #0x0000
	BL DRAW_RECT_FILLED
	
	CMP R11, #0
	BEQ DRAW_PAUSE_ICON

	;Draws the white two rectangles for play icon
	MOV R0, #285
	MOV R1, #292
	MOV R2, #100
	MOV R4, #120
	MOV R5, #0xFFFF
	BL DRAW_RECT_FILLED
	
	MOV R0, #298
	MOV R1, #305
	MOV R2, #100
	MOV R4, #120
	MOV R5, #0xFFFF
	BL DRAW_RECT_FILLED
	BL CONTINUE_LEFT_BAR
	
DRAW_PAUSE_ICON
;Draws the white two rectangles for play icon
	MOV R0, #285
	MOV R1, #305
	MOV R2, #100
	MOV R4, #120
	MOV R5, #0xFFFF
	BL DRAW_RECT_FILLED
	
CONTINUE_LEFT_BAR
	;Draws the starting line
	MOV R0, #270
	MOV R1, #280
	MOV R2, #130
	MOV R4, #135
	MOV R5, #0xFFFF
	BL DRAW_RECT_FILLED
	
	MOV R0, #290
	MOV R1, #300
	MOV R2, #130
	MOV R4, #135
	MOV R5, #0xFFFF
	BL DRAW_RECT_FILLED
	
	MOV R0, #310
	MOV R1, #320
	MOV R2, #130
	MOV R4, #135
	MOV R5, #0xFFFF
	BL DRAW_RECT_FILLED
	
	;Draws the finishing line
	MOV R0, #270
	MOV R1, #280
	MOV R2, #235
	MOV R4, #240
	MOV R5, #0xFFFF
	BL DRAW_RECT_FILLED
	
	MOV R0, #290
	MOV R1, #300
	MOV R2, #235
	MOV R4, #240
	MOV R5, #0xFFFF
	BL DRAW_RECT_FILLED
	
	MOV R0, #310
	MOV R1, #320
	MOV R2, #235
	MOV R4, #240
	MOV R5, #0xFFFF
	BL DRAW_RECT_FILLED
	
	MOV R0, #285
	MOV R1, #305
	MOV R4, #5
	MUL R2, R6, R4
	ADD R2, #130
	MOV R4, R2
	ADD R4, #20
	MOV R5, #0x2CC8
	BL DRAW_RECT_FILLED
	
	CMP R12, #2
	BEQ TWO_LIVES
	
	CMP R12, #1
	BEQ ONE_LIVE
	
	CMP R12, #0
	BEQ	LOST
	
	;Draws three hearts
	MOV R0, #285
	MOV R1, #305
	MOV R2, #10
	MOV R4, #30
	MOV R5, #0XF800
	BL DRAW_RECT_FILLED
	
	MOV R0, #285
	MOV R1, #305
	MOV R2, #40
	MOV R4, #60
	MOV R5, #0XF800
	BL DRAW_RECT_FILLED
	
	MOV R0, #285
	MOV R1, #305
	MOV R2, #70
	MOV R4, #90
	MOV R5, #0XF800
	BL DRAW_RECT_FILLED
	BL END_DRAW_LEFTBAR
	
TWO_LIVES
	;Draws two hearts
	MOV R0, #285
	MOV R1, #305
	MOV R2, #10
	MOV R4, #30
	MOV R5, #0XF800
	BL DRAW_RECT_FILLED
	
	MOV R0, #285
	MOV R1, #305
	MOV R2, #40
	MOV R4, #60
	MOV R5, #0XF800
	BL DRAW_RECT_FILLED
	BL END_DRAW_LEFTBAR
	
ONE_LIVE
	;Draws one heart
	MOV R0, #285
	MOV R1, #305
	MOV R2, #10
	MOV R4, #30
	MOV R5, #0XF800
	BL DRAW_RECT_FILLED
	
END_DRAW_LEFTBAR	
    POP{R0-R7,R9,PC}

	
DRAW_LANES
    ;DRAWS THE THREE LANES WITH FOLLOWING PARAMETERS Y1 =R2, Y2= R4

	PUSH{R0-R7,R9,LR}
	
	MOV R0, #0x02
	
    CMP R0, R5              ; Compare R0 and R1

	BNE WORKAROUND_WWB

    BL WWB
	
WORKAROUND_WWB
	
	MOV R0, #0x06
	
    CMP R0, R5            ; Compare R0 and R1

	BNE WORKAROUND_WRB

    BL WRB
	
WORKAROUND_WRB
	
	MOV R0, #0x10
	
    CMP R0, R5              ; Compare R0 and R1

	BNE WORKAROUND_RWW

    BL RWW
	
WORKAROUND_RWW
	
	MOV R0, #0x12
	
    CMP R0, R5             ; Compare R0 and R1
	
	BNE WORKAROUND_RWB

    BL RWB
	
WORKAROUND_RWB
	
	MOV R0, #0x18
	
    CMP R0, R5            ; Compare R0 and R1
	
	BNE WORKAROUND_RBW

    BL RBW
	
WORKAROUND_RBW

	BL END_DRAW_LANES

RWB

	MOV R0, #0
	MOV R1, #90
	MOV R5, #0X7000
	BL DRAW_RECT_FILLED
	
	MOV R0, #90
	MOV R1, #180
	MOV R5, #0XFFFF
	BL DRAW_RECT_FILLED
	
	MOV R0, #180
	MOV R1, #270
	MOV R5, #0X000C
	BL DRAW_RECT_FILLED
	
	BL END_DRAW_LANES

WWB

	MOV R0, #0
	MOV R1, #90
	MOV R5, #0XFFFF
	BL DRAW_RECT_FILLED
	
	MOV R0, #90
	MOV R1, #180
	MOV R5, #0XFFFF
	BL DRAW_RECT_FILLED
	
	MOV R0, #180
	MOV R1, #270
	MOV R5, #0X000C
	BL DRAW_RECT_FILLED
	
	BL END_DRAW_LANES

RWW

	MOV R0, #0
	MOV R1, #90
	MOV R5, #0X7000
	BL DRAW_RECT_FILLED
	
	MOV R0, #90
	MOV R1, #180
	MOV R5, #0XFFFF
	BL DRAW_RECT_FILLED
	
	MOV R0, #180
	MOV R1, #270
	MOV R5, #0XFFFF
	BL DRAW_RECT_FILLED
	
	BL END_DRAW_LANES

WRB

	MOV R0, #0
	MOV R1, #90
	MOV R5, #0XFFFF
	BL DRAW_RECT_FILLED
	
	MOV R0, #90
	MOV R1, #180
	MOV R5, #0X7000
	BL DRAW_RECT_FILLED
	
	MOV R0, #180
	MOV R1, #270
	MOV R5, #0X000C
	BL DRAW_RECT_FILLED
	
	BL END_DRAW_LANES

RBW

	MOV R0, #0
	MOV R1, #90
	MOV R5, #0X7000
	BL DRAW_RECT_FILLED
	
	MOV R0, #90
	MOV R1, #180
	MOV R5, #0X000C
	BL DRAW_RECT_FILLED
	
	MOV R0, #180
	MOV R1, #270
	MOV R5, #0XFFFF
	BL DRAW_RECT_FILLED
	
END_DRAW_LANES
    
    POP{R0-R7,R9,PC}	


LCD_WRITE
    ;TAKES 8-BITS AND WRITES THEM INTO THE TFT
    ;INPUT: R3
	PUSH{R0-R7,R9,LR}

    ;STEP1: WR PIN (PE11) TO LOW
	LDR     R1, =GPIOA_ODR           ; Load GPIO port output data register address for GPIOA
    LDR     R2, [R1]                 ; Load current value of GPIOA_ODR
	LDR		R4, =NWR
    AND     R2, R2, R4		 ; Clear the 8th bit of GPIOA_ODR
    STR     R2, [R1]                 ; Write the updated value back to GPIOA_ODR

    ;STEP2: WRITE DATA TO YOUR BUS (PE0 --> PE7)
		
	LDR     R1, =GPIOA_ODR           ; Load GPIO port output data register address for GPIOA
    LDR     R2, [R1]                 ; Load current value of GPIOA_ODR
	AND		R2, R2, #0xFF00
    ORR     R2, R2, R3     			 ; Set the 8th bit of GPIOA_ODR
    STR     R2, [R1] 
	
    ;STEP3: WR PIN (PE11) TO HIGH
	LDR     R1, =GPIOA_ODR           ; Load GPIO port output data register address for GPIOA
    LDR     R2, [R1]                 ; Load current value of GPIOA_ODR
	LDR		R4, =WR
    ORR     R2, R2, R4		 ; Clear the 8th bit of GPIOA_ODR
    STR     R2, [R1]                 ; Write the updated value back to GPIOA_ODR

    POP{R0-R7,R9,PC}

LCD_DATA_WRITE
    ;DEFINES "DATA" FROM R3 TO BUS
    ;INPUT: R3
	PUSH{R0-R7,R9,LR}
    ;STEP1: D/CX (PE12) TO HIGH
	LDR     R1, =GPIOA_ODR           ; Load GPIO port output data register address for GPIOA
    LDR     R2, [R1]                 ; Load current value of GPIOA_ODR
	LDR		R4, =RS
    ORR     R2, R2, R4		 ; Clear the 8th bit of GPIOA_ODR
    STR     R2, [R1]                 ; Write the updated value back to GPIOA_ODR
    ;STEP2: LCD_WRITE
	BL LCD_WRITE

    POP{R0-R7,R9,PC}

LCD_COMMAND_WRITE
    ;DEFINES "COMMAND" FROM R3 TO BUS
    ;INPUT: R3
	PUSH{R0-R7,R9,LR}
    ;STEP1: D/CX (PE12) TO LOW
	LDR     R1, =GPIOA_ODR           ; Load GPIO port output data register address for GPIOA
    LDR     R2, [R1]                 ; Load current value of GPIOA_ODR
	LDR		R4, =NRS
    AND     R2, R2, R4		 ; Clear the 8th bit of GPIOA_ODR
    STR     R2, [R1]                 ; Write the updated value back to GPIOA_ODR
    ;STEP2: LCD_WRITE
	BL LCD_WRITE

    POP{R0-R7,R9,PC}

LCD_INIT
    ;INITIALIZE AND CONFIGURE TFT
	PUSH{R0-R7,R9,LR}
    ;STEP1: SET RESET PIN (PE8) TO 1
	LDR     R1, =GPIOA_ODR           ; Load GPIO port output data register address for GPIOA
    LDR     R2, [R1]                 ; Load current value of GPIOA_ODR
	LDR		R4, =RST
    ORR     R2, R2, R4		 ; Clear the 8th bit of GPIOA_ODR
    STR     R2, [R1] 
    ;STEP2: DELAY HALF SECOND
	LDR		R1, =INTERVAL
	LSR 	R1, R1, #1   ; Logical shift right by 1 position to halve delay
DELAY_1
    SUBS R1, #1            
    BNE DELAY_1
    ;STEP3: SET RESET PIN (PE8) TO 0
	LDR     R1, =GPIOA_ODR           ; Load GPIO port output data register address for GPIOA
    LDR     R2, [R1]                 ; Load current value of GPIOA_ODR
	LDR		R4, =NRST
    AND     R2, R2, R4		 ; Clear the 8th bit of GPIOA_ODR
    STR     R2, [R1]                 ; Write the updated value back to GPIOA_ODR
    ;STEP4: DELAY HALF SECOND
	LDR		R1, =INTERVAL
	LSR 	R1, R1, #1   ; Logical shift right by 1 position to halve delay
DELAY_2
    SUBS R1, #1            
    BNE DELAY_2
    ;STEP5: SET RESET PIN (PE8) TO 1
	LDR     R1, =GPIOA_ODR           ; Load GPIO port output data register address for GPIOA
    LDR     R2, [R1]                 ; Load current value of GPIOA_ODR
	LDR		R4, =RST
    ORR     R2, R2, R4		 ; Clear the 8th bit of GPIOA_ODR
    STR     R2, [R1] 
    ;STEP6: DELAY HALF SECOND
	LDR		R1, =INTERVAL
	LSR 	R1, R1, #1   ; Logical shift right by 1 position to halve delay
DELAY_3
    SUBS R1, #1            
    BNE DELAY_3
    ;STEP7: SET CHIP_SELECT PIN (PE15) TO 1
	LDR     R1, =GPIOA_ODR           ; Load GPIO port output data register address for GPIOA
    LDR     R2, [R1]                 ; Load current value of GPIOA_ODR
	LDR		R4, =CS
    ORR     R2, R2, R4		 ; Clear the 8th bit of GPIOA_ODR
    STR     R2, [R1] 
    ;STEP8: SET READ PIN (PE10) TO 1
	LDR     R1, =GPIOA_ODR           ; Load GPIO port output data register address for GPIOA
    LDR     R2, [R1]                 ; Load current value of GPIOA_ODR
	LDR		R4, =RD
    ORR     R2, R2, R4		 ; Clear the 8th bit of GPIOA_ODR
    STR     R2, [R1] 
    ;STEP9: SET WRITE PIN (PE11) TO 1
	LDR     R1, =GPIOA_ODR           ; Load GPIO port output data register address for GPIOA
    LDR     R2, [R1]                 ; Load current value of GPIOA_ODR
	LDR		R4, =WR
    ORR     R2, R2, R4		 ; Clear the 8th bit of GPIOA_ODR
    STR     R2, [R1] 
    ;STEP10: SET CHIP_SELECT PIN (PE15) TO 0
	LDR     R1, =GPIOA_ODR           ; Load GPIO port output data register address for GPIOA
    LDR     R2, [R1]                 ; Load current value of GPIOA_ODR
	LDR		R4, =NCS
    AND     R2, R2, R4		 ; Clear the 8th bit of GPIOA_ODR
    STR     R2, [R1]                 ; Write the updated value back to GPIOA_ODR
    ;STEP11: ISSUE COMMAND FOR CONTRAST(0xC5)
	MOV		R3, #0xC5
	BL LCD_COMMAND_WRITE
    ;STEP12: SEND VCOMH DATA(0x54)
	MOV		R3, #0x54
	BL LCD_DATA_WRITE
    ;STEP13: SEND VCOML DATA(0x00)
	MOV		R3, #0x00
	BL LCD_DATA_WRITE
    ;STEP14: ISSUE COMMAND FOR MADCTL(0x36)
	MOV		R3, #0x36
	BL LCD_COMMAND_WRITE
    ;STEP15: SET MX AND MV PIN ONLY(0x60)
	MOV		R3, #0x60
	BL LCD_DATA_WRITE
    ;STEP16: ISSUE COMMAND FOR COLMOD(0x3A)
	MOV		R3, #0x3A
	BL LCD_COMMAND_WRITE
    ;STEP17: SET MODE TO 16-BIT(0x55)
	MOV		R3, #0x55
	BL LCD_DATA_WRITE
    ;STEP18: ISSUE COMMAND FOR SLEEPOUT(0x11)
	MOV		R3, #0x11
	BL LCD_COMMAND_WRITE
    ;STEP19: DELAY 10MILLI SECOND
	LDR		R1, =INTERVAL
	LSR 	R1, R1, #6   ; Logical shift right by 6 to divide by 100
DELAY_4
    SUBS R1, #1            
    BNE DELAY_4
    ;STEP20: ISSUE COMMAND FOR DISPLAY ON(0x29)
	MOV		R3, #0x29
	BL LCD_COMMAND_WRITE
    ;STEP21: ISSUE COMMAND FOR DISPLAY INVERSION ON(0x20)
	MOV		R3, #0x20
	BL LCD_COMMAND_WRITE
    ;STEP22: ISSUE COMMAND FOR MEMORY WRITE(0x2C)
	MOV		R3, #0x2C
	BL LCD_COMMAND_WRITE

    POP{R0-R7,R9,PC}

ADDRESS_SET
    ;DETEMINES THE AREA OF DRAWING WITH FOLLOWING PARAMETERS
    ;R0: Y1
    ;R1: Y2
    ;R3: X1
    ;R4: X2

	PUSH{R0-R7,R9,LR}
	
    ;STEP1: ISSUE COLUMN ADDRESS COMMAND(0x2A)
	MOV R3, #0x2A
	BL LCD_COMMAND_WRITE
	
    ;STEP2: SEND HIGHER 8-BITS OF X1
	MOV R3, R0, LSR #8  ; Extract higher 8 bits of X1
    BL LCD_DATA_WRITE

	
	;STEP3: SEND LOWER 8-BITS OF X1
	MOV R3, R0  ; Extract lower 8 bits of X1
	AND R3, #0x00FF	
    BL LCD_DATA_WRITE
	
    ;STEP4: SEND HIGHER 8-BITS OF X2
	MOV R3, R1, LSR #8  ; Extract higher 8 bits of X2
    BL LCD_DATA_WRITE

    ;STEP5: SEND LOWER 8-BITS OF X2
    MOV R3, R1  ; Extract lower 8 bits of X2
	AND R3, #0x00FF	
    BL LCD_DATA_WRITE
	
    ;STEP6: ISSUE PAGE ADDRESS COMMAND(0x2B)
	MOV R3, #0x2B
	BL LCD_COMMAND_WRITE

    ;STEP7: SEND HIGHER 8-BITS OF Y1
	MOV R3, R2, LSR #8  ; Extract higher 8 bits of Y1
    BL LCD_DATA_WRITE
	
    ;STEP8: SEND LOWER 8-BITS OF Y1
	MOV R3, R2 ; Extract lower 8 bits of Y1
	AND R3, #0x00FF	
    BL LCD_DATA_WRITE
	
    ;STEP9: SEND HIGHER 8-BITS OF Y2
	MOV R3, R4, LSR #8  ; Extract higher 8 bits of Y2
    BL LCD_DATA_WRITE
    ;STEP10: SEND LOWER 8-BITS OF Y2
	MOV R3, R4; Extract lower 8 bits of Y2
	AND R3, #0x00FF	
    BL LCD_DATA_WRITE

    POP{R0-R7,R9,PC}

DRAW_RECT_FILLED
    ;DRAW A RECTANGLE WITH FOLLOWING PARAMETERS

	PUSH{R0-R7,R9,LR}
	
    ;STEP1: DEFINE ADDRESS SET PARAMETERS (;R0: Y1 ;R1: Y2 ;R3: X1 ;R4: X2)
	BL ADDRESS_SET
	
    ;STEP2: CALCULATE THE AREA OF OUR RECT
	SUBS R6, R1, R0
	SUBS R7, R4, R2
	MUL R6, R6, R7      							; Calculate the area of the rectangle ((X2-X1) * (Y2-Y1))
	
    ;STEP3: ISSUE MEMORY WRITE COMMAND (0x2C)
	MOV R3, #0x2C        						; Load command for writing to LCD (assuming hexadecimal representation)
	BL LCD_COMMAND_WRITE 						; Call LCD_COMMAND_WRITE
	
	CMP R6, #0     								; Compare loop counter
    BEQ SKIP_RECT_LOOP 
	
    ;STEP4: CREATE A LOOP TO DRAW IN ALL TFT PIXELS
RECT_LOOP

    LDR R10, [R9]        ; Read current value of GPIOB_IDR
	AND R10, R10, #0XF000
	
    ;BL DRAW_PIXEL  	; Call a function to write color data to LCD
	;STEP4: SEND HIGHER 8-BITS OF COLOR
	MOV R3, R5, LSR #8  ; Extract higher 8 bits of the color
    BL LCD_DATA_WRITE
	
    ;STEP5: SEND LOWER 8-BITS OF COLOR 
	MOV R3, R5  ; Extract lower 8 bits of the color
	AND R3, #0x00FF	
    BL LCD_DATA_WRITE

	SUBS R6, R6, #1 							; Decrement loop counter
	
	CMP R6, #0     								; Compare loop counter
    BNE RECT_LOOP        
	
SKIP_RECT_LOOP
    
    POP{R0-R7,R9,PC}
	
	
DRAW_SPRITE
	PUSH{R0-R7,R9,LR}
	
    ;STEP1: DEFINE ADDRESS SET PARAMETERS (;R0: Y1 ;R1: Y2 ;R3: X1 ;R4: X2)
	BL ADDRESS_SET
	
    ;STEP2: CALCULATE THE AREA OF OUR RECT
	SUBS R6, R1, R0
	SUBS R7, R4, R2
	MUL R6, R6, R7     							; Calculate the area of the rectangle ((X2-X1) * (Y2-Y1))
	
    ;STEP3: ISSUE MEMORY WRITE COMMAND (0x2C)
	MOV R3, #0x2C        						; Load command for writing to LCD (assuming hexadecimal representation)
	BL LCD_COMMAND_WRITE 						; Call LCD_COMMAND_WRITE
	
	CMP R6, #0     								; Compare loop counter
    BEQ SKIP_SPRITE_LOOP 
	
    ;STEP4: CREATE A LOOP TO DRAW IN ALL TFT PIXELS
SPRITE_LOOP

    LDR R10, [R9]        ; Read current value of GPIOB_IDR
	AND R10, R10, #0XF000
	
	LDR R3, [R5]
	AND R3, #0xF000
	CMP R3, #0xA000
	BEQ CHECK_BLACK_NUMBER
	LDR R3, [R5]
	BL SKIP_DRAW_BLACK

	
CHECK_BLACK_NUMBER
	LDR R3, =CURRENT_NUMBER_OF_BLACK_PIXELS
	LDR R9, [R3]
	CMP R9, #0x0000
	BNE DRAW_BLACK
	LDR R9, [R5]
	LDR R0, =LOWER_THREE_QUARTERS
	AND R9, R9, R0
	STR R9, [R3]
	
DRAW_BLACK
	MOV R3, #0x0000
    BL LCD_DATA_WRITE
    BL LCD_DATA_WRITE
	SUBS R9, R9, #1
	SUBS R6, R6, #1 							; Decrement loop counter
	CMP R9, #0x0000
	BNE DRAW_BLACK
	ADD R5, R5, #2
	STR R9, [R3]
	BL END_OF_SPRITE_LOOP
	
SKIP_DRAW_BLACK
    ;BL DRAW_PIXEL  	; Call a function to write color data to LCD
	;STEP4: SEND HIGHER 8-BITS OF COLOR
	LDR R3, [R5]  ; Extract higher 8 bits of the color
	LSR R3, #8
	AND R3, #0x00FF	
    BL LCD_DATA_WRITE
	
    ;STEP5: SEND LOWER 8-BITS OF COLOR 
	LDR R3, [R5]  ; Extract lower 8 bits of the color
	AND R3, #0x00FF	
    BL LCD_DATA_WRITE

	SUBS R6, R6, #1 							; Decrement loop counter
	
	ADD R5, R5, #2
	
END_OF_SPRITE_LOOP
	
	CMP R6, #0     								; Compare loop counter
    BNE SPRITE_LOOP        
	
SKIP_SPRITE_LOOP
    
    POP{R0-R7,R9,PC}
	
	
DRAW_RECT_PLAYER
    ;DRAW A RECTANGLE WITH FOLLOWING PARAMETERS

	PUSH{R0-R7,R9,LR}
	
    ;STEP1: DEFINE ADDRESS SET PARAMETERS (;R0: Y1 ;R1: Y2 ;R3: X1 ;R4: X2)
	BL ADDRESS_SET
	
    ;STEP2: CALCULATE THE AREA OF OUR RECT
	SUBS R6, R1, R0
	SUBS R7, R4, R2
	MUL R6, R6, R7      							; Calculate the area of the rectangle ((X2-X1) * (Y2-Y1))
	
    ;STEP3: ISSUE MEMORY WRITE COMMAND (0x2C)
	MOV R3, #0x2C        						; Load command for writing to LCD (assuming hexadecimal representation)
	BL LCD_COMMAND_WRITE 						; Call LCD_COMMAND_WRITE
	
    ;STEP4: CREATE A LOOP TO DRAW IN ALL TFT PIXELS
RECT_PLAYER_LOOP
	
    ;BL DRAW_PIXEL  	; Call a function to write color data to LCD
	;STEP4: SEND HIGHER 8-BITS OF COLOR
	MOV R3, R5, LSR #8  ; Extract higher 8 bits of the color
    BL LCD_DATA_WRITE
	
    ;STEP5: SEND LOWER 8-BITS OF COLOR 
	MOV R3, R5  ; Extract lower 8 bits of the color
	AND R3, #0x00FF	
    BL LCD_DATA_WRITE
	
	SUBS R6, R6, #1 							; Decrement loop counter
	
	CMP R6, #0     								; Compare loop counter
    BNE RECT_PLAYER_LOOP     

	LTORG
    
    POP{R0-R7,R9,PC}
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
TOWERS_OF_HANOI
	
	LDR R0, =NUM_RING_TOWER1
	MOV R1, #05
	STRB R1, [R0]
	
	LDR R0, =NUM_RING_TOWER2
	MOV R1, #00
	STRB R1, [R0]
	
	LDR R0, =NUM_RING_TOWER3
	MOV R1, #00
	STRB R1, [R0]
	
	;INITIZLIZE ARRAYS
	LDR R1, =TOWER1_ARRAY ;ZERO INDEXED ARRAY
	MOV R2, #1 
	MOV R3, #0x46
	STRB R3, [R1]
	
	ADD R1, R2				;CHANGE ELEMENT IN ARRAY  
	MOV R3, #0x3C
	STRB R3, [R1]
	
	ADD R1, R2				;CHANGE ELEMENT IN ARRAY  
	MOV R3, #0x32
	STRB R3, [R1]
	
	ADD R1, R2				;CHANGE ELEMENT IN ARRAY  
	MOV R3, #0x28
	STRB R3, [R1]
	
	ADD R1, R2				;CHANGE ELEMENT IN ARRAY  
	MOV R3, #0x1E
	STRB R3, [R1]
	
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	LDR R1, =TOWER2_ARRAY ;ZERO INDEXED ARRAY
	MOV R2, #1 
	MOV R3, #0x00
	STRB R3, [R1]
	
	ADD R1, R2				;CHANGE ELEMENT IN ARRAY  
	MOV R3, #0x00
	STRB R3, [R1]
	
	ADD R1, R2				;CHANGE ELEMENT IN ARRAY  
	MOV R3, #0x00
	STRB R3, [R1]
	
	ADD R1, R2				;CHANGE ELEMENT IN ARRAY  
	MOV R3, #0x00
	STRB R3, [R1]
	
	ADD R1, R2				;CHANGE ELEMENT IN ARRAY  
	MOV R3, #0x00
	STRB R3, [R1]
	
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	LDR R1, =TOWER3_ARRAY ;ZERO INDEXED ARRAY
	MOV R2, #1 
	MOV R3, #0x00
	STRB R3, [R1]
	
	ADD R1, R2				;CHANGE ELEMENT IN ARRAY  
	MOV R3, #0x00
	STRB R3, [R1]
	
	ADD R1, R2				;CHANGE ELEMENT IN ARRAY  
	MOV R3, #0x00
	STRB R3, [R1]
	
	ADD R1, R2				;CHANGE ELEMENT IN ARRAY  
	MOV R3, #0x00
	STRB R3, [R1]
	
	ADD R1, R2				;CHANGE ELEMENT IN ARRAY  
	MOV R3, #0x00
	STRB R3, [R1]
	
	
	;REFRESH SCREEN
	MOV R0, #0
	MOV R1, #320
	MOV R2, #0
	MOV R4, #240
	MOV R5, #0x5500
	BL DRAW_RECT_FILLED
	
    ;CALLING
	BL DRAW_TOWER_OF_HANOI_BACKGROUND_AND_TOWERS_INTILIZATION
	
	BL TOWER_OF_HANOI 
	
	BL END_PROGRAM
	    
ENDFUNC
		
DELAY_1_SEC
    PUSH{R0-R12,LR}
    LDR R0,=INTERVAL
DELAY_1_SEC_LOOP
    SUB R0,R0,#1
    CMP R0,#0
    BGE DELAY_1_SEC_LOOP

    POP{R0-R12,PC}
	
TRASH
	LTORG
	
DRAW_SPRITE_REVERSED
	PUSH{R0-R7,R9,LR}
	
    ;STEP1: DEFINE ADDRESS SET PARAMETERS (;R0: Y1 ;R1: Y2 ;R3: X1 ;R4: X2)
	BL ADDRESS_SET
	
    ;STEP2: CALCULATE THE AREA OF OUR RECT
	SUBS R6, R1, R0
	SUBS R7, R4, R2
	MUL R6, R6, R7     							; Calculate the area of the rectangle ((X2-X1) * (Y2-Y1))
	
    ;STEP3: ISSUE MEMORY WRITE COMMAND (0x2C)
	MOV R3, #0x2C        						; Load command for writing to LCD (assuming hexadecimal representation)
	BL LCD_COMMAND_WRITE 						; Call LCD_COMMAND_WRITE
	
	CMP R6, #0     								; Compare loop counter
    BEQ SKIP_SPRITE_LOOP_REVERSED 
	
    ;STEP4: CREATE A LOOP TO DRAW IN ALL TFT PIXELS
SPRITE_LOOP_REVERSED

    LDR R10, [R9]        ; Read current value of GPIOB_IDR
	AND R10, R10, #0XF000
	
	LDR R3, [R5]
	AND R3, #0xF000
	CMP R3, #0xA000
	BEQ CHECK_BLACK_NUMBER_REVERSED
	LDR R3, [R5]
	BL SKIP_DRAW_BLACK_REVERSED

	
CHECK_BLACK_NUMBER_REVERSED
	LDR R3, =CURRENT_NUMBER_OF_BLACK_PIXELS
	LDR R9, [R3]
	CMP R9, #0x0000
	BNE DRAW_BLACK
	LDR R9, [R5]
	LDR R0, =LOWER_THREE_QUARTERS
	AND R9, R9, R0
	STR R9, [R3]
	
DRAW_BLACK_REVERSED
	MOV R3, #0x0000
    BL LCD_DATA_WRITE
    BL LCD_DATA_WRITE
	SUBS R9, R9, #1
	SUBS R6, R6, #1 							; Decrement loop counter
	CMP R9, #0x0000
	BNE DRAW_BLACK_REVERSED
	SUBS R5, R5, #2
	STR R9, [R3]
	BL END_OF_SPRITE_LOOP_REVERSED
	
SKIP_DRAW_BLACK_REVERSED
    ;BL DRAW_PIXEL  	; Call a function to write color data to LCD
	;STEP4: SEND HIGHER 8-BITS OF COLOR
	LDR R3, [R5]  ; Extract higher 8 bits of the color
	LSR R3, #8
	AND R3, #0x00FF	
    BL LCD_DATA_WRITE
	
    ;STEP5: SEND LOWER 8-BITS OF COLOR 
	LDR R3, [R5]  ; Extract lower 8 bits of the color
	AND R3, #0x00FF	
    BL LCD_DATA_WRITE

	SUBS R6, R6, #1 							; Decrement loop counter
	
	SUBS R5, R5, #2
	
END_OF_SPRITE_LOOP_REVERSED
	
	CMP R6, #0     								; Compare loop counter
    BNE SPRITE_LOOP_REVERSED        
	
SKIP_SPRITE_LOOP_REVERSED
    
    POP{R0-R7,R9,PC}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
DRAW_TOWER_OF_HANOI_BACKGROUND_AND_TOWERS_INTILIZATION

    PUSH{R0-R12,LR}
	
	;DRAW BACKGROUNG OF TOWER OF HANOI
	MOV R0, #0
	MOV R1, #320
	MOV R2, #0
	MOV R4, #240
	MOV R5, #0xFFFF
	BL DRAW_RECT_FILLED

	;DRAW TOWER 1
	MOV R0, #50
	MOV R1, #70
	MOV R2, #60
	MOV R4, #240
	MOV R5, #0x0000
	BL DRAW_RECT_FILLED
	
	;DRAW TOWER 2
	MOV R0, #150
	MOV R1, #170
	MOV R2, #60
	MOV R4, #240
	MOV R5, #0x0000
	BL DRAW_RECT_FILLED
	
	;DRAW TOWER 3
	MOV R0, #250
	MOV R1, #270
	MOV R2, #60
	MOV R4, #240
	MOV R5, #0x0000
	BL DRAW_RECT_FILLED
	
	
	; DRAW THIRD RING
	LDR R5, =TOWER_1
	LDR R6, =LEVEL_1
	LDR R7, =RING_3
	LDR R8, =COLOR_RING_3
	BL DRAW_RING
	
	; DRAW FOURTH RING
	LDR R5, =TOWER_1
	LDR R6, =LEVEL_2
	LDR R7, =RING_4
	LDR R8, =COLOR_RING_4
	BL DRAW_RING
	
	; DRAW FIFTH RING
	LDR R5, =TOWER_1
	LDR R6, =LEVEL_3
	LDR R7, =RING_5
	LDR R8, =COLOR_RING_5
	BL DRAW_RING
	
	; DRAW SIXTH RING
	LDR R5, =TOWER_1
	LDR R6, =LEVEL_4
	LDR R7, =RING_6
	LDR R8, =COLOR_RING_6
	BL DRAW_RING
	
	; DRAW SEVENTH RING
	LDR R5, =TOWER_1
	LDR R6, =LEVEL_5
	LDR R7, =RING_7
	LDR R8, =COLOR_RING_7
	BL DRAW_RING
	 

	POP{R0-R12,PC}
	
DRAW_RING
;INPUT: R5: TOWER

	PUSH{R0-R12,LR}
	;STEP1: DEFINE ADDRESS SET PARAMETERS (;R0: X1 ;R1: X2 ;R2: Y1 ;R4: Y2, R5: COLOR)
	
	BL ADDRESS_SET
	SUBS R2, R6 , #14 	; Y1 = LEVEL-20
	MOV	 R4, R6			; Y2 = = LEVEL
	MOV	 R9, #2
	SDIV R6, R7, R9		; 
	SUBS R0, R5, R6		; X1 = TOWER - RING/2 
	ADDS R1, R5, R6		; X2 = TOWER + RING/2
	MOV  R5, R8			; COLOR= R8 -> COLOR
	
	BL DRAW_RECT_FILLED

	POP{R0-R12,PC}


DELETE_RING
;INPUT: R5: TOWER
;		R6: LEVEL
;		R7:	RING

	PUSH{R0-R12,LR}
	MOV R8, R6
	MOV R11, R5

	;STEP1: DEFINE ADDRESS SET PARAMETERS (;R0: X1 ;R1: X2 ;R2: Y1 ;R4: Y2, R5: COLOR)
	
	SUBS R2, R6 , #14 	; Y1 = LEVEL-20
	MOV	 R4, R6			; Y2 = = LEVEL
	MOV	 R9, #2
	SDIV R6, R7, R9		; 
	SUBS R0, R5, R6		; X1 = TOWER - RING/2 
	ADDS R1, R5, R6		; X2 = TOWER + RING/2
	MOV  R5, #0XFFFF		; COLOR= WHITE
	
	BL DRAW_RECT_FILLED
	
	
	; REDRAW THE TOWER PART

	
	SUBS R2, R8 , #14 	; Y1 = LEVEL-20
	MOV	 R4, R8			; Y2 = LEVEL
	MOV  R6, #10
	SUBS R0, R11, R6		; X1 = TOWER - 10 
	ADDS R1, R11, R6		; X2 = TOWER + 10
	MOV  R5, #0x0000		; COLOR= BLACK
	
	BL DRAW_RECT_FILLED
	

	POP{R0-R12,PC}
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
TOWER_1_case
	;SELECTED RING TO BE MOVED IN FUTURE TO BE DRAW
	LDR R5, =TOWER_1
	LDR R3, =TOWER1_ARRAY
	LDR R8, =NUM_RING_TOWER1     ;GET LAST RING IN TOWER 2 TO DRAW ABOVE  
	LDRB R2,[R8]
	CMP R2, #0
	BEQ SKIP_TEST1
	ADD R3, R2
	SUB R3, #1
	LDRB R1, [R3]
		
	CMP R0, R1  ; Compare the selected ring with the last ring
	BGT BRIDGE_TOWER_OF_HANOI ; Branch to TOWER_OF_HANOI if selected ring is less than last ring

SKIP_TEST1

	LDR R1, =TOWER1_ARRAY
	LDR R9, =NUM_RING_TOWER1
	LDRB R12,[R9]
	MOV R2, R12
	ADD R1, R2				;CHANGE ELEMENT IN ARRAY  
	MOV R3, R0
	STRB R3, [R1]
	
	LDR R9, =NUM_RING_TOWER1
	LDRB R12,[R9]
	ADDS R12, R12, #1
    STRB R12, [R9]
	
	LDR R5, =TOWER_1
	
	CMP R6,R6
	BEQ BRIDGE_RETURN_2
	
TOWER_2_case
	;SELECTED RING TO BE MOVED IN FUTURE TO BE DRAW
	LDR R5, =TOWER_2
	LDR R3, =TOWER2_ARRAY
	LDR R8, =NUM_RING_TOWER2     ;GET LAST RING IN TOWER 2 TO DRAW ABOVE  
	LDRB R2,[R8]
	CMP R2, #0
	BEQ SKIP_TEST2
	ADD R3, R2
	SUB R3, #1
	LDRB R1, [R3]
		
	CMP R0, R1  ; Compare the selected ring with the last ring
	BGT BRIDGE_TOWER_OF_HANOI ; Branch to TOWER_OF_HANOI if selected ring is less than last ring

SKIP_TEST2

	LDR R1, =TOWER2_ARRAY
	LDR R9, =NUM_RING_TOWER2
	LDRB R12,[R9]
	MOV R2, R12
	ADD R1, R2				;CHANGE ELEMENT IN ARRAY  
	MOV R3, R0
	STRB R3, [R1]
	
	LDR R9, =NUM_RING_TOWER2
	LDRB R12,[R9]
	ADDS R12, R12, #1
    STRB R12, [R9]
	
	LDR R5, =TOWER_2
	
	CMP R6,R6
	BEQ BRIDGE_RETURN_2
	

TOWER_3_case
	;SELECTED RING TO BE MOVED IN FUTURE TO BE DRAW
	LDR R5, =TOWER_3
	LDR R3, =TOWER3_ARRAY
	LDR R8, =NUM_RING_TOWER3     ;GET LAST RING IN TOWER 2 TO DRAW ABOVE  
	LDRB R2,[R8]
	CMP R2, #0
	BEQ SKIP_TEST3
	ADD R3, R2
	SUB R3, #1
	LDRB R1, [R3]
		
	CMP R0, R1  ; Compare the selected ring with the last ring
	BGT BRIDGE_TOWER_OF_HANOI ; Branch to TOWER_OF_HANOI if selected ring is less than last ring
	
SKIP_TEST3

	LDR R1, =TOWER3_ARRAY
	LDR R9, =NUM_RING_TOWER3
	LDRB R12,[R9]
	MOV R2, R12
	ADD R1, R2				;CHANGE ELEMENT IN ARRAY  
	MOV R3, R0
	STRB R3, [R1]
	
	LDR R9, =NUM_RING_TOWER3
	LDRB R12,[R9]
	ADDS R12, R12, #1
    STRB R12, [R9]
	
	LDR R5, =TOWER_3
	
	CMP R6,R6
	BEQ BRIDGE_RETURN_2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
TRASH_2
	LTORG
BRIDGE_TOWER_OF_HANOI
	LDR R12, =LIFES
    LDRB R6, [R12]
    SUBS R6, R6, #1
    STRB R6, [R12]
	
	CMP R6, #0
	BEQ LOSE_LABEL	
	
	CMP R6, R6
	BEQ BRIDGE_TOWER_OF_HANOI_END

BRIDGE_RETURN_2
	CMP R6, R6
	BEQ DOUBLE_BRIDGE_RETURN_2
	
LOSE_LABEL
	PUSH{R0-R12,LR}
	
	MOV R0, #0
	MOV R1, #320
	MOV R2, #0
	MOV R4, #240
	MOV R5, #0xe800
	BL DRAW_RECT_FILLED
	
	POP{R0-R12,PC}
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
TOWER_1_SELECTED
	LDR R10,=TOWER_1 
	LDR R0, =NUM_RING_TOWER1  
	LDRB R4,[R0] 
	CMP R4, #0
	BEQ BRIDGE_TOWER_OF_HANOI_END	; CHECK THAT SELECTED TOWER NOT EMPTY and return back to start			;display any message to inform user
	
	LDR R3, =TOWER1_ARRAY 
	ADD R3, R4
	SUB R3, #1
	LDRB R0, [R3] 
	
	LDR R10,=TOWER_1
	CMP R6,R6
	BEQ BRIDGE_RETURN_1
	
TOWER_2_SELECTED
	LDR R10,=TOWER_2 
	LDR R0, =NUM_RING_TOWER2  
	LDRB R4,[R0] 
	CMP R4, #0
	BEQ BRIDGE_TOWER_OF_HANOI_END	; CHECK THAT SELECTED TOWER NOT EMPTY and return back to start			;display any message to inform user
	
	LDR R3, =TOWER2_ARRAY 
	ADD R3, R4
	SUB R3, #1
	LDRB R0, [R3] 
	
	LDR R10,=TOWER_2
	CMP R6,R6
	BEQ BRIDGE_RETURN_1
	
TOWER_3_SELECTED
	LDR R10,=TOWER_3 
	LDR R0, =NUM_RING_TOWER3  
	LDRB R4,[R0] 
	CMP R4, #0
	BEQ BRIDGE_TOWER_OF_HANOI_END	; CHECK THAT SELECTED TOWER NOT EMPTY and return back to start			;display any message to inform user
	
	LDR R3, =TOWER3_ARRAY 
	ADD R3, R4
	SUB R3, #1
	LDRB R0, [R3] 
	
	LDR R10,=TOWER_3
	CMP R6,R6
	BEQ BRIDGE_RETURN_1
	
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
DRAW_LIFES

	ADDS R0, R0, #30
	ADDS R1, R1, #30

	BL DRAW_RECT_FILLED

	SUBS R6, R6, #1 
	CMP R6, R7
	BEQ RETURN_LIFES
	
	CMP R6, R6
	BEQ DRAW_LIFES
	
BRIDGE_RETURN_1
	CMP R6, R6
	BEQ RETURN_1
DOUBLE_BRIDGE_RETURN_2
	CMP R6, R6
	BEQ RETURN_2
BRIDGE_TOWER_OF_HANOI_END
	CMP R6, R6
	BEQ DOUBLE_BRIDGE_TOWER_OF_HANOI_END
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	
TOWER_OF_HANOI
	PUSH{R0-R12,LR}
	
	MOV R0, #40
	MOV R1, #320
	MOV R2, #20
	MOV R4, #40
	MOV R5, #0xFFFF
	BL DRAW_RECT_FILLED
	
	MOV R0, #40
	MOV R1, #50
	MOV R2, #20
	MOV R4, #40
	MOV R5, #0xe800
	LDR R12, =LIFES
    LDRB R6, [R12]
	MOV R7, #0
	BL DRAW_LIFES
	
RETURN_LIFES
	BL DELAY_1_SEC
	;BL DELAY_1_SEC
	
	LDR R9, =GPIOB_IDR   ; Load address of GPIOB_IDR into R0
	
	MOV R0, #0
	MOV R1, #20
	MOV R2, #0
	MOV R4, #20
	MOV R5, #0x00FF
	BL DRAW_RECT_FILLED

	MOV R6,#0
	MOV R7,#0
BUSY_WAIT1
	LDR R6, [R9]  				; GET FIRST CLICK VALUE
	AND R6, R6, #0XF000
	CMP R7, R6
	BEQ BUSY_WAIT1
	
	
	MOV R0, #0
	MOV R1, #20
	MOV R2, #0
	MOV R4, #20
	MOV R5, #0x2600
	BL DRAW_RECT_FILLED
	
	BL DELAY_1_SEC
	BL DELAY_1_SEC

	
	MOV R5,R6
	MOV R6, #0
	MOV R7, #0
BUSY_WAIT2
	LDR R6, [R9]  				; GET FIRST CLICK VALUE
	AND R6, R6, #0XF000
	CMP R7, R6
	BEQ BUSY_WAIT2
		
		
	CMP R6, R5
	BEQ BRIDGE_TOWER_OF_HANOI_END     ;START AGAIN IF THE USER PRESSED SAME TOWER TWICE
	
	CMP R5, #0X1000
	BEQ TOWER_1_SELECTED
	CMP R5, #0X2000
	BEQ TOWER_2_SELECTED
	CMP R5, #0X4000
	BEQ TOWER_3_SELECTED
	
RETURN_1	
	BL DELAY_1_SEC
	
	;R0 -> RING TO BE DELETED AND DRAWN VALUE
	;R4 -> NUMBER OF RINGS IN FIRST TOWER
	;R10 -> FIRST TOWER
	
	
	CMP R6, #0X1000
	BEQ TOWER_1_case
	CMP R6, #0X2000
	BEQ TOWER_2_case
	CMP R6, #0X4000
	BEQ TOWER_3_case
	
	;R2 -> NUMBER OF RINGS IN SECOND TOWER
	;R1 -> LAST RING IN SECOND TOWER
	;R5 -> SECOND TOWER 
DOUBLE_BRIDGE_TOWER_OF_HANOI_END
	CMP R6, R6
	BEQ TRIPLE_BRIDGE_TOWER_OF_HANOI_END
		
RETURN_2
	BL DELAY_1_SEC
		
	
	; IF CONFITION TO KNOW THE NUMBER OF RINGS IN TOWER_1 _DELETED RING
    CMP R4, #1       ; Compare the value in R0 with 1
    BEQ case_11       ; Branch to case_1 if equal
    CMP R4, #2       ; Compare the value in R0 with 2
    BEQ case_12       ; Branch to case_2 if equal
    CMP R4, #3       ; Compare the value in R0 with 3
    BEQ case_13       ; Branch to case_3 if equal
	CMP R4, #4       ; Compare the value in R0 with 1
    BEQ case_14       ; Branch to case_1 if equal
    CMP R4, #5       ; Compare the value in R0 with 1
    BEQ case_15       ; Branch to case_1 if equal
    CMP R4, #6       ; Compare the value in R0 with 1
    BEQ case_16       ; Branch to case_1 if equal
	CMP R4, #7       ; Compare the value in R0 with 1
    BEQ case_17       ; Branch to case_1 if equal
	
	
case_11
	LDR R3, =LEVEL_1
	CMP R3, R3
	BEQ CONTINUE_1
case_12
	LDR R3, =LEVEL_2
	CMP R3, R3
	BEQ CONTINUE_1
case_13
	LDR R3, =LEVEL_3
	CMP R3, R3
	BEQ CONTINUE_1
case_14
	LDR R3, =LEVEL_4
	CMP R3, R3
	BEQ CONTINUE_1
case_15
	LDR R3, =LEVEL_5
	CMP R3, R3
	BEQ CONTINUE_1
case_16
	LDR R3, =LEVEL_6
	CMP R3, R3
	BEQ CONTINUE_1
case_17
	LDR R3, =LEVEL_7
	BEQ CONTINUE_1
	
CONTINUE_1


; IF CONFITION TO KNOW THE NUMBER OF RINGS IN TOWER_1_drawed ring
    CMP R2, #0       ; Compare the value in R0 with 1
    BEQ case_21       ; Branch to case_1 if equal
    CMP R2, #1       ; Compare the value in R0 with 2
    BEQ case_22       ; Branch to case_2 if equal
    CMP R2, #2       ; Compare the value in R0 with 3
    BEQ case_23       ; Branch to case_3 if equal
	CMP R2, #3       ; Compare the value in R0 with 1
    BEQ case_24       ; Branch to case_1 if equal
    CMP R2, #4       ; Compare the value in R0 with 1
    BEQ case_25       ; Branch to case_1 if equal
    CMP R2, #5       ; Compare the value in R0 with 1
    BEQ case_26       ; Branch to case_1 if equal
	CMP R2, #6       ; Compare the value in R0 with 1
    BEQ case_27       ; Branch to case_1 if equal

case_21
	LDR R4, =LEVEL_1
	CMP R4, R4
	BEQ CONTINUE_2
case_22
	LDR R4, =LEVEL_2
	CMP R4, R4
	BEQ CONTINUE_2
case_23
	LDR R4, =LEVEL_3
	CMP R4, R4
	BEQ CONTINUE_2
case_24
	LDR R4, =LEVEL_4
	CMP R4, R4
	BEQ CONTINUE_2
case_25
	LDR R4, =LEVEL_5
	CMP R4, R4
	BEQ CONTINUE_2
case_26
	LDR R4, =LEVEL_6
	CMP R4, R4
	BEQ CONTINUE_2
case_27
	LDR R4, =LEVEL_7
		
CONTINUE_2



	; IF CONFITION TO KNOW THE THE SELECTED RING IS WITH ONE OF THE SEVEN RINGS
    CMP R0, 0x005A    ; Compare the value in R0 with RING_1
    BEQ case_31       ; Branch to case_1 if equal
    CMP R0, 0x0050    ; Compare the value in R0 with RING_2
    BEQ case_32       ; Branch to case_2 if equal
    CMP R0, 0x0046    ; Compare the value in R0 with RING_3
    BEQ case_33       ; Branch to case_3 if equal
	CMP R0, 0x003C    ; Compare the value in R0 with RING_4
    BEQ case_34       ; Branch to case_1 if equal
    CMP R0, 0x0032    ; Compare the value in R0 with RING_5
    BEQ case_35       ; Branch to case_1 if equal
    CMP R0, 0x0028    ; Compare the value in R0 with RING_6
    BEQ case_36       ; Branch to case_1 if equal
    CMP R0, 0x001E    ; Compare the value in R0 with RING_7
    BEQ case_37       ; Branch to case_1 if equal
	
case_31
	LDR R8, =COLOR_RING_1
	CMP R8, R8
	BEQ CONTINUE_3
case_32
	LDR R8, =COLOR_RING_2
	CMP R8, R8
	BEQ CONTINUE_3
case_33
	LDR R8, =COLOR_RING_3
	CMP R8, R8
	BEQ CONTINUE_3
case_34
	LDR R8, =COLOR_RING_4
	CMP R8, R8
	BEQ CONTINUE_3
case_35
	LDR R8, =COLOR_RING_5
	CMP R8, R8
	BEQ CONTINUE_3
case_36
	LDR R8, =COLOR_RING_6
	CMP R8, R8
	BEQ CONTINUE_3
case_37
	LDR R8, =COLOR_RING_7
	BEQ CONTINUE_3
	
TRIPLE_BRIDGE_TOWER_OF_HANOI_END
	CMP R6, R6
	BEQ TOWER_OF_HANOI_END
CONTINUE_3


	;R3 -> LEVEL TO DELETE THE RING
	;R4 -> LEVEL TO DRAW THE RING
	;R8 -> COLOUR OF THE RING
	
	MOV R7, R0
	MOV R6, R4
	;INPUT: R5: TOWER
	;		R6: LEVEL
	;		R7:	RING
	;       R8: COLOR
	BL DRAW_RING
	
	MOV R5, R10
	MOV R6, R3
	;INPUT: R5: TOWER
	;		R6: LEVEL
	;		R7:	RING
	BL DELETE_RING
	
	CMP R10, 0x003C       
    BEQ case_1       
    CMP R10, 0x00A0       
    BEQ case_2       
    CMP R10, 0x0104      
    BEQ case_3     
	
case_1
	LDR R1, =TOWER1_ARRAY
	LDR R12, =NUM_RING_TOWER1
	LDRB R0,[R12]
	SUBS R0, R0, #1
	MOV R2, R0
	ADD R1, R2				;CHANGE ELEMENT IN ARRAY  
	MOV R3, #0
	STRB R3, [R1]
	
	LDR R12, =NUM_RING_TOWER1
    LDRB R0, [R12]
    SUBS R0, R0, #1
    STRB R0, [R12]
	
	CMP R8, R8
	BEQ CONTINUE_04
case_2
	LDR R1, =TOWER2_ARRAY
	LDR R12, =NUM_RING_TOWER2
	LDRB R0,[R12]
	SUBS R0, R0, #1
	MOV R2, R0
	ADD R1, R2				;CHANGE ELEMENT IN ARRAY  
	MOV R3, #0
	STRB R3, [R1]
	
	LDR R12, =NUM_RING_TOWER2
    LDRB R0, [R12]
    SUBS R0, R0, #1
    STRB R0, [R12]
	
	CMP R8, R8
	BEQ CONTINUE_04
case_3
	LDR R1, =TOWER3_ARRAY
	LDR R12, =NUM_RING_TOWER3
	LDRB R0,[R12]
	SUBS R0, R0, #1
	MOV R2, R0
	ADD R1, R2				;CHANGE ELEMENT IN ARRAY  
	MOV R3, #0
	STRB R3, [R1]
	
	LDR R12, =NUM_RING_TOWER3
    LDRB R0, [R12]
    SUBS R0, R0, #1
    STRB R0, [R12]
	
	
CONTINUE_04
	
	LDR R12, =NUM_RING_TOWER2
	LDRB R0,[R12]
	CMP R0, #7
	BEQ WIN_LABEL
	
	
	LDR R12, =NUM_RING_TOWER3
	LDRB R0,[R12]
	CMP R0, #7
	BEQ WIN_LABEL
	
TOWER_OF_HANOI_END

    MOV R0, #0
    MOV R1, #0
    MOV R2, #0
    MOV R3, #0
    MOV R4, #0
    MOV R5, #0
    MOV R6, #0
    MOV R7, #0
    MOV R8, #0
    ;MOV R9, #0
    MOV R10, #0
    MOV R11, #0
    MOV R12, #0
	CMP R0, R0
	BEQ TOWER_OF_HANOI
	
WIN_LABEL
	
	MOV R0, #0
	MOV R1, #320
	MOV R2, #0
	MOV R4, #240
	MOV R5, #0x5500
	BL DRAW_RECT_FILLED
	
	POP{R0-R12,PC}
		 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
END_PROGRAM
	SUBS R1,#1

END